//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v10.1.21.0 (Newtonsoft.Json v12.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------
using Elements;
using Elements.GeoJSON;
using Elements.Geometry;
using Elements.Geometry.Solids;
using Elements.Properties;
using Elements.Validators;
using Elements.Serialization.JSON;
using System;
using System.Collections.Generic;
using System.Linq;
using Line = Elements.Geometry.Line;
using Polygon = Elements.Geometry.Polygon;

namespace Elements
{
    #pragma warning disable // Disable all warnings

    /// <summary>A curtain wall system</summary>
    [Newtonsoft.Json.JsonConverter(typeof(Elements.Serialization.JSON.JsonInheritanceConverter), "discriminator")]
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "10.1.21.0 (Newtonsoft.Json v12.0.0.0)")]
    [UserElement]
	public partial class CurtainWall : GeometricElement
    {
        [Newtonsoft.Json.JsonConstructor]
        public CurtainWall(Profile @profile, 
            IList<Curve> @uGrids,
            IList<Curve> @vGrids,
            IList<Mullion> @interiorMullions,
            IList<Mullion> @perimeterMullions,
            IList<Panel> @spandrelPanels, 
            IList<Panel> @glazedPanels, 
            Transform @transform, 
            Material @material, 
            Representation @representation, 
            bool @isElementDefinition, 
            System.Guid @id, 
            string @name)
            : base(transform, material, representation, isElementDefinition, id, name)
        {
            var validator = Validator.Instance.GetFirstValidatorForType<CurtainWall>
            ();
            if(validator != null)
            {
                validator.PreConstruct(new object[]{ @profile, @uGrids, @vGrids, @interiorMullions, @perimeterMullions, @spandrelPanels, @glazedPanels, @transform, @material, @representation, @isElementDefinition, @id, @name});
            }
        
                this.Profile = @profile;
                this.uGridlines = @uGrids;
                this.vGridlines = @vGrids;
                this.InteriorMullions = @interiorMullions;
                this.PerimeterMullions = @perimeterMullions;
                this.SpandrelPanels = @spandrelPanels;
                this.GlazedPanels = @glazedPanels;
            
            if(validator != null)
            {
            validator.PostConstruct(this);
            }
            }
    
        /// <summary>The overall profile of the wall</summary>
        [Newtonsoft.Json.JsonProperty("Profile", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Profile Profile { get; set; }
    
        [Newtonsoft.Json.JsonProperty("uGridlines", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Curve> uGridlines { get; set; }

        [Newtonsoft.Json.JsonProperty("vGridlines", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Curve> vGridlines { get; set; }

        [Newtonsoft.Json.JsonProperty("InteriorMullions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Mullion> InteriorMullions { get; set; }

        [Newtonsoft.Json.JsonProperty("PerimeterMullions", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Mullion> PerimeterMullions { get; set; }

        /// <summary>Opaque panels in the curtain wall system</summary>
        [Newtonsoft.Json.JsonProperty("Spandrel Panels", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Panel> SpandrelPanels { get; set; }
    
        /// <summary>Transparent vision glass panels in the curtain wall system</summary>
        [Newtonsoft.Json.JsonProperty("Glazed Panels", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public IList<Panel> GlazedPanels { get; set; }
    
    
    }
}